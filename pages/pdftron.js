import React from 'react';

import Head from 'next/head';
import styles from '../styles/Home.module.css';

export default function PDFTRON() {
	return (
		<div className={styles.container}>
			<Head>
				<title>PDF</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<MyComponent initialDoc="Consent for treatment.pdf" />
		</div>
	);
}

const MyComponent = ({ initialDoc }) => {
	const viewer = React.useRef(null);
	const [updatedPdfBuffer, setUpdatedPdfBuffer] = React.useState();
	const [instance, setInstance] = React.useState();

	React.useEffect(() => {
		import('@pdftron/webviewer').then(() => {
			WebViewer(
				{
					path: '/webviewer',
					initialDoc,
				},
				viewer.current
			).then(instance => {
				setInstance(instance);
				const { docViewer } = instance;
				// you can now call WebViewer APIs here...
			});
		});
	}, []);

	async function exportPDF() {
		const content = await instance.exportPDF({ flatten: true });
		console.log(content); // => ArrayBuffer of document with flattened form fields
		setUpdatedPdfBuffer(content);
	}

	return (
		<div style={{ boxSizing: 'border-box' }}>
			<h1>PDFTRON</h1>
			<button onClick={exportPDF}>EXPORT</button> <br />
			<div
				ref={viewer}
				style={{ height: '80vh', width: '50%', display: 'inline-block' }}
			></div>
			<iframe
				src={
					updatedPdfBuffer
						? URL.createObjectURL(
								new Blob([updatedPdfBuffer], { type: 'application/pdf' })
						  )
						: initialDoc
				}
				style={{
					border: 'none',
					height: '80vh',
					width: '50%',
					display: 'inline-block',
				}}
			></iframe>
		</div>
	);
};
