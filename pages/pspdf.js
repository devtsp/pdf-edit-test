import React from 'react';

import Head from 'next/head';
import styles from '../styles/Home.module.css';

export default function Pdfjs() {
	return (
		<div className={styles.container}>
			<Head>
				<title>PDF</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<MyComponent />
		</div>
	);
}

const MyComponent = () => {
	const containerRef = React.useRef(null);
	const [instance, setInstance] = React.useState();

	const [updatedPdfBuffer, setUpdatedPdfBuffer] = React.useState(null);

	React.useEffect(() => {
		const container = containerRef.current;
		let PSPDFKit;

		(async function () {
			PSPDFKit = await import('pspdfkit');

			if (PSPDFKit) {
				PSPDFKit.unload(container);
			}

			const instance = await PSPDFKit.load({
				container,
				document: '/new_document.pdf',
				baseUrl: `${window.location.protocol}//${window.location.host}/`,
			});

			setInstance(instance);
		})();

		return () => PSPDFKit && PSPDFKit.unload(container);
	}, []);

	// async function seeFields() {
	// 	const formFields = await instance.getFormFields();
	// 	console.log(formFields);

	// 	const formFieldValues = instance.getFormFieldValues();
	// 	console.log(formFieldValues);
	// }

	async function exportPDF() {
		const content = await instance.exportPDF({ flatten: true });
		console.log(content); // => ArrayBuffer of document with flattened form fields
		setUpdatedPdfBuffer(content);
	}

	return (
		<>
			{/* <button onClick={seeFields}>SEE FIELDS</button> */}
			<button onClick={exportPDF}>EXPORT</button>

			<div ref={containerRef} style={{ height: '100vh' }} />

			<h1>MODIFIED</h1>
			<iframe
				style={{ width: '100%' }}
				src={
					updatedPdfBuffer &&
					URL.createObjectURL(
						new Blob([updatedPdfBuffer], { type: 'application/pdf' })
					)
				}
			></iframe>
		</>
	);
};
